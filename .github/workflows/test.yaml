# Template: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package using Pip

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

# Cancel workflow if a new push occurs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest,macos-latest]
        python-version: ["3.8", "3.11"]
        torch-version: ["1.10", "last"]

    steps:
    # --- INSTALLATIONS ---
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install package
      run: |
        if [ "${{ matrix.torch-version }}" != last ]; then
          version_greater_equal() {
            printf '%s\n%s\n' "$2" "$1" | sort --check=quiet --version-sort
          }
          torch_min_version=`python -m pip index versions torch | grep 'Available versions' | rev | cut -d' ' -f 1 | rev`
          echo "Found torch_min_version=${torch_min_version}"
          version_greater_equal "${{ matrix.torch-version }}" "${torch_min_version}"
          is_ge=$?
          if [ "${is_ge}" == 1 ]; then
            version=${{ matrix.torch-version }}
          else
            version=${torch_min_version}
          fi
          echo "Installing torch version=${version}"
          python -m pip install torch==${version}
        fi
        python -m pip install -e .[extras,dev]

    # --- TESTS ---
    - name: Lint with flake8
      run: |
        python -m flake8 --config .flake8 --exit-zero --show-source --statistics src

    - name: Check format with Black
      run: |
        python -m black --check --diff src

    - name: Print install info
      run: |
        torchoutil-info

    - name: Test with pytest
      run: |
        python -m pytest -v
